# ------------------------------------------------------------------------------------ #
# Description:
#    Pipeline to deploy Azure policies for whitelisting services in BOIPROD Azure Tenant
#
# ------------------------------------------------------------------------------------ #
 
trigger: none
 
 
#variables:
#- group: 'E5_AzureLandingZone-IAC-VarGroup'
 
stages:
- stage: Build
  displayName: Terraform-Plan  
  jobs:
  - job: TerraformPlan
    displayName: Terraform-Plan
    pool:
      name: ''
    steps:
    
      
    - task: TerraformCLI@1
      displayName: Terraform-Init
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
        backendType: 'azurerm'
        backendServiceArm: ''
        backendAzureRmSubscriptionId: ''
        backendAzureRmResourceGroupName: ''
        backendAzureRmStorageAccountName: ''
        backendAzureRmContainerName: 'tfstate'
        backendAzureRmKey: ''
        allowTelemetryCollection: false
        
    - task: TerraformCLI@1
      displayName: Terraform-Plan
      inputs:
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)
        environmentServiceName: ''
        allowTelemetryCollection: false
        publishPlanResults: 'Terraform Plan'
 
 
- stage: Apply
  displayName: Terraform-Apply 
  dependsOn: Build
  jobs:
  - deployment: TerraformApply
    displayName: Terraform-Apply
    pool:
      name: ''
    environment: sandbox
    strategy: 
      runOnce:
        deploy:
          steps:
          
    
          - task: TerraformCLI@1
            displayName: Terraform-Init
            inputs:
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              backendType: 'azurerm'
              backendServiceArm: ''
              backendAzureRmSubscriptionId: ''
              backendAzureRmResourceGroupName: ''
              backendAzureRmStorageAccountName: ''
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: ''
              allowTelemetryCollection: false
 
    
          - task: TerraformCLI@1
            displayName: Terraform-Apply
            inputs:
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              environmentServiceName: ''
              allowTelemetryCollection: false
 
    
